{"version":3,"sources":["./src/app/layout/asidenavbar/asidenavbar.component.ts","./src/app/layout/asidenavbar/asidenavbar.component.html","./src/app/register/register-routing.module.ts","./src/app/services/services.module.ts","./src/app/forgotpassword/forgotpassword/forgotpassword.component.ts","./src/app/forgotpassword/forgotpassword/forgotpassword.component.html","./src/app/api/auth-guard.service.ts","./src/environments/environment.ts","./src/app/forgotpassword/forgotpassword.module.ts","./src/app/layout/topnavbar/topnavbar.component.html","./src/app/layout/topnavbar/topnavbar.component.ts","./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard/dashboard.component.html","./src/app/services/balance-inquiry/balance-inquiry.component.html","./src/app/services/balance-inquiry/balance-inquiry.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/dashboard/dashboard.module.ts","./src/app/layout/layout.module.ts","./src/app/register/register/register.component.ts","./src/app/register/register/register.component.html","./src/app/api/auth.service.ts","./src/app/login/login.module.ts","./src/app/layout/footernavbar/footernavbar.component.ts","./src/app/layout/footernavbar/footernavbar.component.html","./src/app/app.module.ts","./src/app/api/error-handler.service.ts","./src/app/login/login-routing.module.ts","./src/app/services/services-routing.module.ts","./src/app/login/login/login.component.ts","./src/app/login/login/login.component.html","./src/app/api/saldo.service.ts","./src/app/layout/layout-routing.module.ts","./src/app/app-routing.module.ts","./src/app/register/register.module.ts","./src/app/services/home/home.component.ts","./src/app/services/home/home.component.html","./src/app/api/auth-interceptor.service.ts","./src/app/forgotpassword/forgotpassword-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-asidenavbar',\n  templateUrl: './asidenavbar.component.html',\n  styleUrls: ['./asidenavbar.component.css']\n})\nexport class AsidenavbarComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Main Sidebar Container -->\n<aside class=\"main-sidebar sidebar-dark-primary elevation-4\">\n    <!-- Brand Logo -->\n    <a class=\"brand-link\">\n        <!-- <img src=\"assets/dist/img/AdminLTELogo.png\" alt=\"AdminLTE Logo\" class=\"brand-image img-circle elevation-3\" -->\n            <!-- style=\"opacity: .8\"> -->\n        <span class=\"brand-text font-weight-light\">Client Prototype IPT</span>\n    </a>\n\n    <!-- Sidebar -->\n    <div class=\"sidebar\">\n        <!-- Sidebar Menu -->\n        <nav class=\"mt-2\">\n            <ul class=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\n                <li class=\"nav-item\">\n                    <a routerLink=\"../dashboard/home\" class=\"nav-link\">\n                        <i class=\"nav-icon fas fa-home\"></i>\n                        <p>\n                            Dashboard\n                        </p>\n                    </a>\n                </li>\n\n                <li class=\"nav-header\">SERVICES</li>\n                <li class=\"nav-item\">\n                    <a routerLink=\"../dashboard/balance-inquiry\" class=\"nav-link\">\n                        <i class=\"nav-icon fas fa-wallet\"></i>\n                        <p>\n                            Balance Inquiry\n                        </p>\n                    </a>\n                </li>\n                <!-- <li class=\"nav-item\">\n                    <a href=\"#\" class=\"nav-link\">\n                        <i class=\"nav-icon fas fa-concierge-bell\"></i>\n                        <p>\n                            Another Service\n                        </p>\n                    </a>\n                </li> -->\n            </ul>\n        </nav>\n        <!-- /.sidebar-menu -->\n    </div>\n    <!-- /.sidebar -->\n</aside>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  {\n    path: 'register',\n    component: RegisterComponent,\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ServicesRoutingModule } from './services-routing.module';\nimport { BalanceInquiryComponent } from './balance-inquiry/balance-inquiry.component';\nimport { HomeComponent } from './home/home.component';\n\n\n@NgModule({\n  declarations: [\n    BalanceInquiryComponent,\n    HomeComponent\n  ],\n  imports: [\n    CommonModule,\n    ServicesRoutingModule\n  ]\n})\nexport class ServicesModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrls: ['./forgotpassword.component.css']\n})\nexport class ForgotpasswordComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    document.body.className = 'hold-transition login-page';\n    $(() => {\n      $('input').iCheck({\n        checkboxClass: 'icheckbox_square-blue',\n        radioClass: 'iradio_square-blue',\n        increaseArea: '20%' /* optional */\n      });\n    });\n  }\n\n  login() {\n    this.router.navigate(['login']);\n  }\n\n}\n","<div class=\"login-box\">\n    <div class=\"login-logo\">\n        <a>Prototype<b>IPT</b></a>\n    </div>\n    <!-- /.login-logo -->\n    <div class=\"card\">\n        <div class=\"card-body login-card-body\">\n            <p class=\"login-box-msg\">You forgot your password? Here you can easily retrieve a new password.</p>\n\n            <form action=\"recover-password.html\" method=\"post\">\n                <div class=\"input-group mb-3\">\n                    <input type=\"email\" class=\"form-control\" placeholder=\"Email\">\n                    <div class=\"input-group-append\">\n                        <div class=\"input-group-text\">\n                            <span class=\"fas fa-envelope\"></span>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"login()\">Request new password</button>\n                    </div>\n                    <!-- /.col -->\n                </div>\n            </form>\n\n            <p class=\"mt-3 mb-1\">\n                <a routerLink=\"../login\">Login</a>\n            </p>\n            <p class=\"mb-0\">\n                <a routerLink=\"../register\" class=\"text-center\">Register a new account</a>\n            </p>\n        </div>\n        <!-- /.login-card-body -->\n    </div>\n</div>\n<!-- /.login-box -->","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(): Observable<boolean> {\n    if(!this.authService.isUserLoggedIn$.value) {\n      this.router.navigate([\"login\"]);\n    }\n    return this.authService.isUserLoggedIn$;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ForgotpasswordRoutingModule } from './forgotpassword-routing.module';\nimport { ForgotpasswordComponent } from './forgotpassword/forgotpassword.component';\n\n\n@NgModule({\n  declarations: [\n    ForgotpasswordComponent\n  ],\n  imports: [\n    CommonModule,\n    ForgotpasswordRoutingModule\n  ]\n})\nexport class ForgotpasswordModule { }\n","<!-- Navbar -->\n<nav class=\"main-header navbar navbar-expand navbar-white navbar-light\">\n    <!-- Left navbar links -->\n    <ul class=\"navbar-nav\">\n        <li class=\"nav-item d-none d-sm-inline-block\">\n            <a *ngIf=\"isAuthenticated\" class=\"nav-link\">User: {{this.userId}}</a>\n        </li>\n    </ul>\n\n    <!-- Right navbar links -->\n    <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item d-none d-sm-inline-block\">\n            <a *ngIf=\"isAuthenticated\" (click)=\"logout()\" routerLinkActive=\"active-link\" class=\"nav-link\"\n                href=\"#\">Logout</a>\n        </li>\n    </ul>\n</nav>\n<!-- /.navbar -->","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/api/auth.service';\nimport { User } from 'src/app/models/User';\n\n@Component({\n  selector: 'app-topnavbar',\n  templateUrl: './topnavbar.component.html',\n  styleUrls: ['./topnavbar.component.css']\n})\nexport class TopnavbarComponent implements OnInit {\n  isAuthenticated = false;\n  userId: Pick<User, \"id\">\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.userId = this.authService.userId; \n    this.authService.isUserLoggedIn$.subscribe((isLoggedIn) => {\n      this.isAuthenticated = isLoggedIn;\n    })\n  }\n\n  logout(): void {\n    localStorage.removeItem(\"token\");\n    this.authService.isUserLoggedIn$.next(false);\n    this.router.navigate([\"login\"]);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BalanceInquiryComponent } from '../services/balance-inquiry/balance-inquiry.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nimport { AuthGuardService } from \"../api/auth-guard.service\";\nimport { HomeComponent } from '../services/home/home.component';\n\nconst routes: Routes = [\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuardService],\n    children: [\n      { path: 'balance-inquiry', component: BalanceInquiryComponent },\n      { path: 'home', component: HomeComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n\n  constructor(public router: Router) { }\n\n  ngOnInit() {\n    window.dispatchEvent(new Event('resize'));\n    document.body.className = 'skin-blue sidebar-mini';\n  }\n\n  ngOnDestroy(): void {\n    document.body.className = '';\n  }\n\n}","<div class=\"wrapper\">\n    <app-topnavbar></app-topnavbar>\n    <app-asidenavbar></app-asidenavbar>\n    <div class=\"content-wrapper\" style=\"min-height: 926px;\">\n        <section class=\"content-header\">\n            <section class=\"content\">\n                <router-outlet></router-outlet>\n            </section>\n        </section>\n    </div>\n    <app-footernavbar></app-footernavbar>\n</div>","<section class=\"content-header\">\n    <div class=\"container-fluid\">\n        <div class=\"row mb-2\">\n            <div class=\"col-sm-6\">\n                <h1>Balance Inquiry</h1>\n            </div>\n        </div>\n    </div>\n</section>\n\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card w-50\" *ngFor=\"let saldo of saldo$ | async\">\n            <div class=\"card-body\">\n                {{saldo.amount}}\n                <h3 class=\"card-title\">Account Number: 11112222</h3>\n            </div>\n            <div class=\"card-body\">\n                <h3 class=\"card-title\">Client Id: 16</h3>\n            </div>\n            <div class=\"card-body\">\n                <h3 class=\"card-title\">Name: Yasha</h3>\n            </div>\n            <div class=\"card-body\">\n                <h3 class=\"card-title\">Amount: Rp 1.500.000,00</h3>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { Observable} from \"rxjs\";\n\nimport { SaldoService } from \"../../api/saldo.service\"; \nimport { AuthService } from \"../../api/auth.service\"; \n\nimport { User } from '../../models/User';\nimport { Saldo } from '../../models/Saldo';\n\n@Component({\n  selector: 'app-balance-inquiry',\n  templateUrl: './balance-inquiry.component.html',\n  styleUrls: ['./balance-inquiry.component.css']\n})\nexport class BalanceInquiryComponent implements OnInit {\n  saldo$: Observable<Saldo[]>;\n  userId: Pick<User, \"id\">;\n\n  constructor(private saldoService: SaldoService, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.userId = this.authService.userId;\n    this.saldo$ = this.getSaldo();\n    \n  }\n\n  getSaldo(): Observable<Saldo[]> {\n    return this.saldoService.getSaldo(this.userId);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'front-end';\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LayoutModule } from '../layout/layout.module';\n\n\n@NgModule({\n  declarations: [\n    DashboardComponent\n  ],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    LayoutModule\n  ]\n})\nexport class DashboardModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LayoutRoutingModule } from './layout-routing.module';\nimport { TopnavbarComponent } from './topnavbar/topnavbar.component';\nimport { AsidenavbarComponent } from './asidenavbar/asidenavbar.component';\nimport { FooternavbarComponent } from './footernavbar/footernavbar.component';\n\n\n@NgModule({\n  declarations: [\n    TopnavbarComponent,\n    AsidenavbarComponent,\n    FooternavbarComponent\n  ],\n  imports: [\n    CommonModule,\n    LayoutRoutingModule\n  ],\n  exports: [\n    TopnavbarComponent,\n    AsidenavbarComponent,\n    FooternavbarComponent\n  ]\n})\nexport class LayoutModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\ndeclare var $: any;\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { AuthService } from 'src/app/api/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  signupForm: FormGroup;\n\n  constructor(private router: Router, private authService: AuthService, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    document.body.className = 'hold-transition register-page';\n    $(() => {\n      $('input').iCheck({\n        checkboxClass: 'icheckbox_square-blue',\n        radioClass: 'iradio_square-blue',\n        increaseArea: '20%' /* optional */\n      });\n    });\n\n    this.signupForm = this.createFormGroup();\n  }\n\n  createFormGroup(): FormGroup {\n    return new FormGroup({\n      name: new FormControl(\"\", [Validators.required, Validators.minLength(2)]),\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [Validators.required, Validators.minLength(7)])\n    })\n  }\n\n  signup(): void {\n    // this.authService.signup(this.signupForm.value).subscribe((msg) => console.log(msg));\n    this.toastr.success('Hello world!', 'Toastr fun!');\n    this.router.navigate(['login']);\n  }\n\n}\n","<div class=\"register-box\">\n  <div class=\"register-logo\">\n    <a>Prototype<b>IPT</b></a>\n  </div>\n\n  <div class=\"card\">\n    <div class=\"card-body register-card-body\">\n      <p class=\"login-box-msg\">Register a new account</p>\n\n      <form [formGroup]=\"signupForm\" (ngSubmit)=\"signup()\" novalidate action=\"../../index.html\" method=\"post\">\n        <div class=\"input-group mb-3\">\n          <input type=\"text\" class=\"form-control\" placeholder=\"Full name\" formControlName=\"name\">\n          <div class=\"input-group-append\">\n            <div class=\"input-group-text\">\n              <span class=\"fas fa-user\"></span>\n            </div>\n          </div>\n        </div>\n        <div class=\"input-group mb-3\">\n          <input type=\"email\" class=\"form-control\" placeholder=\"Email\" formControlName=\"email\">\n          <div class=\"input-group-append\">\n            <div class=\"input-group-text\">\n              <span class=\"fas fa-envelope\"></span>\n            </div>\n          </div>\n        </div>\n        <div class=\"input-group mb-3\">\n          <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\">\n          <div class=\"input-group-append\">\n            <div class=\"input-group-text\">\n              <span class=\"fas fa-lock\"></span>\n            </div>\n          </div>\n        </div>\n        <!-- <div class=\"input-group mb-3\">\n          <input type=\"password\" class=\"form-control\" placeholder=\"Retype password\">\n          <div class=\"input-group-append\">\n            <div class=\"input-group-text\">\n              <span class=\"fas fa-lock\"></span>\n            </div>\n          </div>\n        </div> -->\n        <div class=\"row\">\n          <!-- /.col -->\n          <div class=\"col-12\">\n            <button type=\"submit\" class=\"btn btn-warning btn-block\" [disabled]=\"!signupForm.valid\">Register</button>\n          </div>\n          <!-- /.col -->\n        </div>\n      </form>\n\n      <p class=\"mt-3 mb-1\">\n        <a routerLink=\"../login\" class=\"text-center\">I already have an account </a>\n    </p>\n\n    </div>\n    <!-- /.form-box -->\n  </div><!-- /.card -->\n</div>\n<!-- /.register-box -->","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { first, catchError, tap } from 'rxjs/operators';\n\nimport { User } from '../models/User'\nimport { ErrorHandlerService } from './error-handler.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private url = \"http://localhost:3000/auth\";\n\n  isUserLoggedIn$ = new BehaviorSubject<boolean>(false);\n  userId: Pick<User, \"id\">;\n  name: Pick<User, \"name\">;\n\n  httpOptions: { headers: HttpHeaders } = {\n    headers: new HttpHeaders({\n      \"Content-Type\": \"application/json\"\n    })\n  }\n\n  constructor(\n    private http: HttpClient,\n    private errorHandlerService: ErrorHandlerService,\n    private router: Router\n  ) { }\n\n  signup(user: Omit<User, \"id\">): Observable<User> {\n    return this.http\n      .post<User>(`${this.url}/signup`, user, this.httpOptions)\n      .pipe(\n        first(),\n        catchError(this.errorHandlerService.handleError<User>(\"signup\"))\n      )\n  }\n\n  login(\n    email: Pick<User, \"email\">,\n    password: Pick<User, \"password\">\n  ): Observable<{\n    token: string;\n    userId: Pick<User, \"id\">;\n  }> {\n    return this.http\n      .post<any>(`${this.url}/login`, { email, password }, this.httpOptions)\n      .pipe(\n        first(),\n        tap((tokenObject: { token: string; userId: Pick<User, \"id\"> }) => {\n          this.userId = tokenObject.userId;\n          localStorage.setItem(\"token\", tokenObject.token);\n          this.isUserLoggedIn$.next(true);\n          this.router.navigate([\"dashboard/home\"]);\n        }),\n        catchError(\n          this.errorHandlerService.handleError<{\n            token: string;\n            userId: Pick<User, \"id\">;\n          }>(\"login\")\n        )\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule} from '@angular/common/http';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login/login.component';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ]\n})\nexport class LoginModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footernavbar',\n  templateUrl: './footernavbar.component.html',\n  styleUrls: ['./footernavbar.component.css']\n})\nexport class FooternavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"main-footer\">\n    Copyright &copy; 2021 Prototype IPT\n    <div class=\"float-right d-none d-sm-inline-block\">\n        Version 1.0.0\n    </div>\n</footer>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { ForgotpasswordModule } from './forgotpassword/forgotpassword.module';\nimport { LoginModule } from './login/login.module';\nimport { RegisterModule } from './register/register.module';\nimport { ServicesModule } from './services/services.module';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { AuthInterceptorService} from \"./api/auth-interceptor.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    LoginModule,\n    RegisterModule,\n    DashboardModule,\n    ForgotpasswordModule,\n    ServicesModule,\n    NoopAnimationsModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorHandlerService {\n  handleError<T>(operation = \"operation\", result?: T) {\n    return (error: any): Observable<T> => {\n      console.log(`${operation} failed: ${error.message}`);\n      return of(result as T);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent,\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class LoginRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ServicesRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\ndeclare var $: any;\n\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { AuthService } from 'src/app/api/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(private router: Router, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    document.body.className = 'hold-transition login-page';\n    $(() => {\n      $('input').iCheck({\n        checkboxClass: 'icheckbox_square-blue',\n        radioClass: 'iradio_square-blue',\n        increaseArea: '20%' /* optional */\n      });\n    });\n\n    this.loginForm = this.createFormGroup();\n  }\n\n  createFormGroup(): FormGroup {\n    return new FormGroup({\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [Validators.required, Validators.minLength(7)])\n    })\n  }\n\n  login(): void {\n    this.authService\n    .login(this.loginForm.value.email, this.loginForm.value.password)\n    .subscribe()\n  }\n\n  register() {\n    this.router.navigate(['register']);\n  }\n\n  forgotpassword() {\n    this.router.navigate(['forgotpassword']);\n  }\n\n}\n","<div class=\"login-box\">\n  <div class=\"login-logo\">\n    <a>Prototype<b>IPT</b></a>\n  </div>\n  <!-- /.login-logo -->\n  <div class=\"card\">\n    <div class=\"card-body login-card-body\">\n      <p class=\"login-box-msg\">Sign in to start your session</p>\n\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" novalidate action=\"../../index3.html\" method=\"post\">\n        <div class=\"input-group mb-3\">\n          yaps@gmail.com\n          <input type=\"email\" class=\"form-control\" placeholder=\"Email\" formControlName=\"email\">\n          <div class=\"input-group-append\">\n            <div class=\"input-group-text\">\n              <span class=\"fas fa-envelope\"></span>\n            </div>\n          </div>\n        </div>\n        <div class=\"input-group mb-3\">\n          password\n          <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\">\n          <div class=\"input-group-append\">\n            <div class=\"input-group-text\">\n              <span class=\"fas fa-lock\"></span>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <!-- /.col -->\n          <div class=\"col-12\">\n            <button type=\"submit\" class=\"btn btn-primary btn-block\" [disabled]=\"!loginForm.valid\">Sign In</button>\n          </div>\n          <!-- /.col -->\n        </div>\n      </form>\n\n      <!-- <p class=\"mt-3 mb-1\">\n        <a routerLink=\"../forgotpassword\">I forgot my password</a>\n      </p> -->\n      <!-- <p class=\"mb-0\">\n        <a routerLink=\"../register\">Register a new account</a>\n      </p> -->\n\n    </div>\n    <!-- /.login-card-body -->\n  </div>\n</div>\n<!-- /.login-box -->","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { User } from '../models/User';\nimport { Saldo } from '../models/Saldo';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaldoService {\n  private url = \"http://localhost:3000/saldo\";\n\n  httpOptions: { headers: HttpHeaders } = {\n    headers: new HttpHeaders({\n      \"Content-Type\": \"application/json\"\n    })\n  }\n\n  constructor(private http: HttpClient, private errorHandlerService: ErrorHandlerService) { }\n\n  getSaldo(userId: Pick<User, \"id\">): Observable<Saldo[]> {\n    return this.http\n      .get<Saldo[]>(`${this.url}/${userId}`, { responseType: \"json\"})\n      .pipe(\n        catchError(this.errorHandlerService.handleError<Saldo[]>(\"getSaldo\", []))\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LayoutRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'dashboard/home',\n    pathMatch: 'full',\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule} from '@angular/common/http';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { RegisterRoutingModule } from './register-routing.module';\nimport { RegisterComponent } from './register/register.component';\n\n\n@NgModule({\n  declarations: [\n    RegisterComponent,\n  ],\n  imports: [\n    CommonModule,\n    RegisterRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n  ]\n})\nexport class RegisterModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"callout callout-info\">\n            <h5>Selamat datang,</h5>\n            Anda sedang mengakses client prototype untuk proyek IPT. <br>\n            Gunakan sidebar disebelah kiri untuk memilih service apa yang akan anda coba.\n        </div>\n    </div>\n</div>","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInterceptorService implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const token = localStorage.getItem(\"token\");\n    if(token){\n      const clonedRequest = req.clone({\n        headers: req.headers.set(\"Authorization\", \"Bearer \" + token),\n      });\n      return next.handle(clonedRequest);\n    } else {\n      return next.handle(req);\n    }\n  }\n\n  constructor() { }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ForgotpasswordComponent } from './forgotpassword/forgotpassword.component';\n\nconst routes: Routes = [\n  {\n    path: 'forgotpassword',\n    component: ForgotpasswordComponent,\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ForgotpasswordRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}